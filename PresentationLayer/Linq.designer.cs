#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_MOBILE_SHOP")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCOUNTRY(COUNTRY instance);
    partial void UpdateCOUNTRY(COUNTRY instance);
    partial void DeleteCOUNTRY(COUNTRY instance);
    partial void InsertSTATE(STATE instance);
    partial void UpdateSTATE(STATE instance);
    partial void DeleteSTATE(STATE instance);
    partial void InsertTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void UpdateTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void DeleteTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_MOBILE_SHOPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<COUNTRY> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<STATE> STATEs
		{
			get
			{
				return this.GetTable<STATE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_CUSTOMER> TBL_CUSTOMERs
		{
			get
			{
				return this.GetTable<TBL_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTRY")]
	public partial class COUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private EntitySet<STATE> _STATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public COUNTRY()
		{
			this._STATEs = new EntitySet<STATE>(new Action<STATE>(this.attach_STATEs), new Action<STATE>(this.detach_STATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_STATE", Storage="_STATEs", ThisKey="ID", OtherKey="COUNTRYID")]
		public EntitySet<STATE> STATEs
		{
			get
			{
				return this._STATEs;
			}
			set
			{
				this._STATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STATEs(STATE entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = this;
		}
		
		private void detach_STATEs(STATE entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATE")]
	public partial class STATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private System.Nullable<int> _COUNTRYID;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnCOUNTRYIDChanging(System.Nullable<int> value);
    partial void OnCOUNTRYIDChanged();
    #endregion
		
		public STATE()
		{
			this._COUNTRY = default(EntityRef<COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", DbType="Int")]
		public System.Nullable<int> COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOUNTRYIDChanging(value);
					this.SendPropertyChanging();
					this._COUNTRYID = value;
					this.SendPropertyChanged("COUNTRYID");
					this.OnCOUNTRYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_STATE", Storage="_COUNTRY", ThisKey="COUNTRYID", OtherKey="ID", IsForeignKey=true)]
		public COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.STATEs.Remove(this);
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.STATEs.Add(this);
						this._COUNTRYID = value.ID;
					}
					else
					{
						this._COUNTRYID = default(Nullable<int>);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_CUSTOMER")]
	public partial class TBL_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CNAME;
		
		private string _CGENDER;
		
		private string _CEMAIL;
		
		private string _CPASSWORD;
		
		private string _CPHONE;
		
		private string _CCOUNTRY;
		
		private string _CSTATE;
		
		private string _CADDRESS;
		
		private System.Nullable<System.DateTime> _CDOB;
		
		private System.Nullable<System.DateTime> _CJOINDATE;
		
		private string _CQUESTION;
		
		private string _CANSWER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCNAMEChanging(string value);
    partial void OnCNAMEChanged();
    partial void OnCGENDERChanging(string value);
    partial void OnCGENDERChanged();
    partial void OnCEMAILChanging(string value);
    partial void OnCEMAILChanged();
    partial void OnCPASSWORDChanging(string value);
    partial void OnCPASSWORDChanged();
    partial void OnCPHONEChanging(string value);
    partial void OnCPHONEChanged();
    partial void OnCCOUNTRYChanging(string value);
    partial void OnCCOUNTRYChanged();
    partial void OnCSTATEChanging(string value);
    partial void OnCSTATEChanged();
    partial void OnCADDRESSChanging(string value);
    partial void OnCADDRESSChanged();
    partial void OnCDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnCDOBChanged();
    partial void OnCJOINDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCJOINDATEChanged();
    partial void OnCQUESTIONChanging(string value);
    partial void OnCQUESTIONChanged();
    partial void OnCANSWERChanging(string value);
    partial void OnCANSWERChanged();
    #endregion
		
		public TBL_CUSTOMER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNAME", DbType="VarChar(50)")]
		public string CNAME
		{
			get
			{
				return this._CNAME;
			}
			set
			{
				if ((this._CNAME != value))
				{
					this.OnCNAMEChanging(value);
					this.SendPropertyChanging();
					this._CNAME = value;
					this.SendPropertyChanged("CNAME");
					this.OnCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CGENDER", DbType="VarChar(10)")]
		public string CGENDER
		{
			get
			{
				return this._CGENDER;
			}
			set
			{
				if ((this._CGENDER != value))
				{
					this.OnCGENDERChanging(value);
					this.SendPropertyChanging();
					this._CGENDER = value;
					this.SendPropertyChanged("CGENDER");
					this.OnCGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEMAIL", DbType="VarChar(50)")]
		public string CEMAIL
		{
			get
			{
				return this._CEMAIL;
			}
			set
			{
				if ((this._CEMAIL != value))
				{
					this.OnCEMAILChanging(value);
					this.SendPropertyChanging();
					this._CEMAIL = value;
					this.SendPropertyChanged("CEMAIL");
					this.OnCEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPASSWORD", DbType="VarChar(50)")]
		public string CPASSWORD
		{
			get
			{
				return this._CPASSWORD;
			}
			set
			{
				if ((this._CPASSWORD != value))
				{
					this.OnCPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._CPASSWORD = value;
					this.SendPropertyChanged("CPASSWORD");
					this.OnCPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPHONE", DbType="VarChar(50)")]
		public string CPHONE
		{
			get
			{
				return this._CPHONE;
			}
			set
			{
				if ((this._CPHONE != value))
				{
					this.OnCPHONEChanging(value);
					this.SendPropertyChanging();
					this._CPHONE = value;
					this.SendPropertyChanged("CPHONE");
					this.OnCPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCOUNTRY", DbType="VarChar(20)")]
		public string CCOUNTRY
		{
			get
			{
				return this._CCOUNTRY;
			}
			set
			{
				if ((this._CCOUNTRY != value))
				{
					this.OnCCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._CCOUNTRY = value;
					this.SendPropertyChanged("CCOUNTRY");
					this.OnCCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSTATE", DbType="VarChar(20)")]
		public string CSTATE
		{
			get
			{
				return this._CSTATE;
			}
			set
			{
				if ((this._CSTATE != value))
				{
					this.OnCSTATEChanging(value);
					this.SendPropertyChanging();
					this._CSTATE = value;
					this.SendPropertyChanged("CSTATE");
					this.OnCSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CADDRESS", DbType="VarChar(200)")]
		public string CADDRESS
		{
			get
			{
				return this._CADDRESS;
			}
			set
			{
				if ((this._CADDRESS != value))
				{
					this.OnCADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CADDRESS = value;
					this.SendPropertyChanged("CADDRESS");
					this.OnCADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDOB", DbType="Date")]
		public System.Nullable<System.DateTime> CDOB
		{
			get
			{
				return this._CDOB;
			}
			set
			{
				if ((this._CDOB != value))
				{
					this.OnCDOBChanging(value);
					this.SendPropertyChanging();
					this._CDOB = value;
					this.SendPropertyChanged("CDOB");
					this.OnCDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CJOINDATE", DbType="Date")]
		public System.Nullable<System.DateTime> CJOINDATE
		{
			get
			{
				return this._CJOINDATE;
			}
			set
			{
				if ((this._CJOINDATE != value))
				{
					this.OnCJOINDATEChanging(value);
					this.SendPropertyChanging();
					this._CJOINDATE = value;
					this.SendPropertyChanged("CJOINDATE");
					this.OnCJOINDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CQUESTION", DbType="VarChar(200)")]
		public string CQUESTION
		{
			get
			{
				return this._CQUESTION;
			}
			set
			{
				if ((this._CQUESTION != value))
				{
					this.OnCQUESTIONChanging(value);
					this.SendPropertyChanging();
					this._CQUESTION = value;
					this.SendPropertyChanged("CQUESTION");
					this.OnCQUESTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANSWER", DbType="VarChar(200)")]
		public string CANSWER
		{
			get
			{
				return this._CANSWER;
			}
			set
			{
				if ((this._CANSWER != value))
				{
					this.OnCANSWERChanging(value);
					this.SendPropertyChanging();
					this._CANSWER = value;
					this.SendPropertyChanged("CANSWER");
					this.OnCANSWERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PBRAND;
		
		private string _PMODEL;
		
		private string _PIMAGE;
		
		private System.Nullable<int> _PWARRANTY;
		
		private System.Nullable<double> _PPRICE;
		
		private System.Nullable<System.DateTime> _PDATE;
		
		private System.Nullable<int> _PCAMBACK;
		
		private System.Nullable<int> _PCAMFRONT;
		
		private string _PRAM;
		
		private string _PROM;
		
		private string _PPROCESSOR;
		
		private string _POS;
		
		private System.Nullable<int> _PBATTERY;
		
		private System.Nullable<double> _PDISPLAY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPBRANDChanging(string value);
    partial void OnPBRANDChanged();
    partial void OnPMODELChanging(string value);
    partial void OnPMODELChanged();
    partial void OnPIMAGEChanging(string value);
    partial void OnPIMAGEChanged();
    partial void OnPWARRANTYChanging(System.Nullable<int> value);
    partial void OnPWARRANTYChanged();
    partial void OnPPRICEChanging(System.Nullable<double> value);
    partial void OnPPRICEChanged();
    partial void OnPDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPDATEChanged();
    partial void OnPCAMBACKChanging(System.Nullable<int> value);
    partial void OnPCAMBACKChanged();
    partial void OnPCAMFRONTChanging(System.Nullable<int> value);
    partial void OnPCAMFRONTChanged();
    partial void OnPRAMChanging(string value);
    partial void OnPRAMChanged();
    partial void OnPROMChanging(string value);
    partial void OnPROMChanged();
    partial void OnPPROCESSORChanging(string value);
    partial void OnPPROCESSORChanged();
    partial void OnPOSChanging(string value);
    partial void OnPOSChanged();
    partial void OnPBATTERYChanging(System.Nullable<int> value);
    partial void OnPBATTERYChanged();
    partial void OnPDISPLAYChanging(System.Nullable<double> value);
    partial void OnPDISPLAYChanged();
    #endregion
		
		public PRODUCT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBRAND", DbType="VarChar(50)")]
		public string PBRAND
		{
			get
			{
				return this._PBRAND;
			}
			set
			{
				if ((this._PBRAND != value))
				{
					this.OnPBRANDChanging(value);
					this.SendPropertyChanging();
					this._PBRAND = value;
					this.SendPropertyChanged("PBRAND");
					this.OnPBRANDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMODEL", DbType="VarChar(50)")]
		public string PMODEL
		{
			get
			{
				return this._PMODEL;
			}
			set
			{
				if ((this._PMODEL != value))
				{
					this.OnPMODELChanging(value);
					this.SendPropertyChanging();
					this._PMODEL = value;
					this.SendPropertyChanged("PMODEL");
					this.OnPMODELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIMAGE", DbType="VarChar(50)")]
		public string PIMAGE
		{
			get
			{
				return this._PIMAGE;
			}
			set
			{
				if ((this._PIMAGE != value))
				{
					this.OnPIMAGEChanging(value);
					this.SendPropertyChanging();
					this._PIMAGE = value;
					this.SendPropertyChanged("PIMAGE");
					this.OnPIMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWARRANTY", DbType="Int")]
		public System.Nullable<int> PWARRANTY
		{
			get
			{
				return this._PWARRANTY;
			}
			set
			{
				if ((this._PWARRANTY != value))
				{
					this.OnPWARRANTYChanging(value);
					this.SendPropertyChanging();
					this._PWARRANTY = value;
					this.SendPropertyChanged("PWARRANTY");
					this.OnPWARRANTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPRICE", DbType="Float")]
		public System.Nullable<double> PPRICE
		{
			get
			{
				return this._PPRICE;
			}
			set
			{
				if ((this._PPRICE != value))
				{
					this.OnPPRICEChanging(value);
					this.SendPropertyChanging();
					this._PPRICE = value;
					this.SendPropertyChanged("PPRICE");
					this.OnPPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDATE", DbType="Date")]
		public System.Nullable<System.DateTime> PDATE
		{
			get
			{
				return this._PDATE;
			}
			set
			{
				if ((this._PDATE != value))
				{
					this.OnPDATEChanging(value);
					this.SendPropertyChanging();
					this._PDATE = value;
					this.SendPropertyChanged("PDATE");
					this.OnPDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCAMBACK", DbType="Int")]
		public System.Nullable<int> PCAMBACK
		{
			get
			{
				return this._PCAMBACK;
			}
			set
			{
				if ((this._PCAMBACK != value))
				{
					this.OnPCAMBACKChanging(value);
					this.SendPropertyChanging();
					this._PCAMBACK = value;
					this.SendPropertyChanged("PCAMBACK");
					this.OnPCAMBACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCAMFRONT", DbType="Int")]
		public System.Nullable<int> PCAMFRONT
		{
			get
			{
				return this._PCAMFRONT;
			}
			set
			{
				if ((this._PCAMFRONT != value))
				{
					this.OnPCAMFRONTChanging(value);
					this.SendPropertyChanging();
					this._PCAMFRONT = value;
					this.SendPropertyChanged("PCAMFRONT");
					this.OnPCAMFRONTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRAM", DbType="VarChar(50)")]
		public string PRAM
		{
			get
			{
				return this._PRAM;
			}
			set
			{
				if ((this._PRAM != value))
				{
					this.OnPRAMChanging(value);
					this.SendPropertyChanging();
					this._PRAM = value;
					this.SendPropertyChanged("PRAM");
					this.OnPRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROM", DbType="VarChar(50)")]
		public string PROM
		{
			get
			{
				return this._PROM;
			}
			set
			{
				if ((this._PROM != value))
				{
					this.OnPROMChanging(value);
					this.SendPropertyChanging();
					this._PROM = value;
					this.SendPropertyChanged("PROM");
					this.OnPROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPROCESSOR", DbType="VarChar(50)")]
		public string PPROCESSOR
		{
			get
			{
				return this._PPROCESSOR;
			}
			set
			{
				if ((this._PPROCESSOR != value))
				{
					this.OnPPROCESSORChanging(value);
					this.SendPropertyChanging();
					this._PPROCESSOR = value;
					this.SendPropertyChanged("PPROCESSOR");
					this.OnPPROCESSORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POS", DbType="VarChar(50)")]
		public string POS
		{
			get
			{
				return this._POS;
			}
			set
			{
				if ((this._POS != value))
				{
					this.OnPOSChanging(value);
					this.SendPropertyChanging();
					this._POS = value;
					this.SendPropertyChanged("POS");
					this.OnPOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBATTERY", DbType="Int")]
		public System.Nullable<int> PBATTERY
		{
			get
			{
				return this._PBATTERY;
			}
			set
			{
				if ((this._PBATTERY != value))
				{
					this.OnPBATTERYChanging(value);
					this.SendPropertyChanging();
					this._PBATTERY = value;
					this.SendPropertyChanged("PBATTERY");
					this.OnPBATTERYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDISPLAY", DbType="Float")]
		public System.Nullable<double> PDISPLAY
		{
			get
			{
				return this._PDISPLAY;
			}
			set
			{
				if ((this._PDISPLAY != value))
				{
					this.OnPDISPLAYChanging(value);
					this.SendPropertyChanging();
					this._PDISPLAY = value;
					this.SendPropertyChanged("PDISPLAY");
					this.OnPDISPLAYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
